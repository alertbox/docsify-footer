{
  "name": "docsify-footer",
  // See complete list https://hub.docker.com/r/oven/bun
  "image": "oven/bun",
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [
    // Http
    4321
  ],
  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  "remoteUser": "root",
  // Add more features. See complete list https://github.com/devcontainers/features
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "configureZshAsDefaultShell": true
    },
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
      "moby": false,
      "dockerDashComposeVersion": "v2"
    },
    "./local-features/deno": {}
  },
  "remoteEnv": {},
  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        // JavaScript
        "oven.bun-vscode",
        // TypeScript
        "bierner.lit-html",
        "better-ts-errors.better-ts-errors",
        // Makefile
        "ms-vscode.makefile-tools",
        // Markdown
        "bierner.markdown-preview-github-styles",
        "bierner.markdown-emoji",
        "bierner.markdown-checkbox",
        "bierner.jsdoc-markdown-highlighting",
        "ms-vscode.wordcount",
        // Other
        "albert.tabout",
        "bierner.comment-tagged-templates"
      ],
      // Set *default* container specific settings.json values on container create.
      "settings": {
        // Editor
        "editor.guides.bracketPairs": "active",
        // Debug
        "debug.internalConsoleOptions": "neverOpen",
        // Terminal
        "terminal.integrated.defaultProfile.linux": "zsh",
        // Prettifies the response with emojis and such.
        "betterTypeScriptErrors.prettify": true
      }
    }
  },
  // Use 'updateContentCommand' to run commands after the container is successfully created.
  "updateContentCommand": {
    "install": "bun install --global docsify-cli"
  },
  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": {
    "restore": "bun install"
  }
}
